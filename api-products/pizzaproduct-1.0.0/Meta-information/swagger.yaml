openapi: 3.0.1
info:
  title: pizzaproduct
  version: 1.0.0
servers:
 -
  url: /
security:
 -
  default: []
paths:
  /pets:
    get:
      tags:
       - pets
      summary: List all pets
      operationId: listPets
      parameters:
       -
        name: limit
        in: query
        description: How many items to return at one time (max 100)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
       -
        default: []
    post:
      tags:
       - pets
      summary: Create a pet
      operationId: createPets
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
       -
        default: []
  /order:
    post:
      description: Create a new Order
      requestBody:
        description: Order object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        201:
          description: Created. Successful response with the newly created object as entity inthe body. Location header contains URL of newly created entity.
          headers:
            Location:
              description: The URL of the newly created resource.
              schema:
                type: string
            Content-Type:
              description: The content type of the body.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Bad Request. Invalid request or validation error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        415:
          description: Unsupported Media Type. The entity of the request was in a not supported format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
      x-codegen-request-body-name: body
  /menu:
    get:
      description: Return a list of available menu items
      responses:
        200:
          description: OK. List of APIs is returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
        304:
          description: Not Modified. Empty body because the client has already the latest version of the requested resource.
          content: {}
        406:
          description: Not Acceptable. The requested media type is not supported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
       -
        default: []
      x-auth-type: Application & Application User
      x-throttling-tier: Unlimited
components:
  schemas:
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
    Error:
      required:
       - code
       - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Pet:
      required:
       - id
       - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
  securitySchemes:
    default:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://test.com
          scopes: {}
          x-scopes-bindings: {}
